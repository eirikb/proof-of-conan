name: Proof of Conan

on:
  workflow_dispatch:
    inputs:
      repository:
        required: true
        description: 'x'
      path:
        required: true
        description: 'x'
      targets:
        required: true
        description: 'JSON of all your targets'

jobs:
  checkout:
    runs-on: ubuntu-latest
    steps:
      - run: echo here we go
      - uses: actions/checkout@v2
      - name: Checkout
        uses: actions/checkout@v2
        with:
          repository: ${{ github.event.inputs.repository }}

      - uses: actions/upload-artifact@v1
        with:
          name: repo
          path: ${{ github.event.inputs.path }}

  _:
    runs-on: ${{ matrix.os }}
    needs: checkout
    strategy:
      matrix: ${{fromJson(github.event.inputs.targets)}}
    steps:
      # Yes I understand this check doesn't mean much when I'm anyway going
      # to run random python-scripts, but at least those need an account.
      - run: |
          # https://unix.stackexchange.com/a/498744
          case "${{ matrix.conancmd }}" in
            ("" | *[!abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ1234567890./@\-\ =+\'_:]*)
              echo "NOT ALLOWED" && exit 1;;
            (*)
              echo "::set-output name=test::${{ matrix.conancmd }}";;
          esac
        shell: bash
      - uses: actions/download-artifact@v1
        with:
          name: repo

      - run: du -a
        shell: bash

      - run: mv repo/${{ matrix.path }}/* .
        shell: bash

      - run: pip3 install conan

      - run: conan install "${{ matrix.toolchain }}" -g virtualenv
        if: ${{ matrix.toolchain != '' }}

      - run: |
          du -a
          if test -f activate.sh; then
            echo "ACTIVATE!"
            source activate.sh
          fi
          which g++
          conan profile update default --detect --force
          conan ${{ matrix.conancmd }}
        name: conan ${{ matrix.conancmd }}
        shell: bash

      - run: conan ${{ matrix.conancmd }}
        if: ${{ matrix.container == '' }}
        # Must be root? How else to use /build, and can't use ~ since we don't know the user
      - run: docker run --rm -i -v "$PWD:/build" -u root -w /build "${{ matrix.container }}" conan ${{ matrix.conancmd }}
        if: ${{ matrix.container != '' }}
